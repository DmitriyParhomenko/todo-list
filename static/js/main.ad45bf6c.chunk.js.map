{"version":3,"sources":["components/app-main-title/app-main-title.js","components/app-info-to-do/app-info-to-do.js","components/app-header/app-header.js","components/app-search/app-search.js","components/app-filter/app-filter.js","components/app-main-search/app-main-search.js","components/todo-list-item/todo-list-item.js","components/app-remove-item/app-remove-item.js","components/app-important-item/app-important-item.js","components/app-list/app-list.js","components/app-add-form/app-add-form.js","components/app/app.js","index.js"],"names":["AppMainTitle","title","className","AppInfoToDo","countToDo","countDone","AppHeader","todoData","doneCount","filter","el","done","length","todoCount","AppSearch","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","AppFilter","buttons","name","label","onFilterChange","map","clazz","onClick","AppMainSearch","TodoListItem","important","onDoneItem","style","color","itemClassNames","AppRemoveItem","onRemoveItem","AppImportantItem","onImportantItem","AppList","listItem","item","id","itemProps","AppAddForm","onLabelChange","onSubmit","preventDefault","onAddItem","btnName","App","maxId","createTodoItem","removeItem","idx","findIndex","elem","slice","addItem","text","obj","newItem","doneItem","changeStateToDoData","importantItem","propName","oldItem","items","toLowerCase","indexOf","visibleItem","search","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad45bf6c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './app-main-title.scss';\n\nconst AppMainTitle = ({title}) => {\n    return <h1 className=\"app-main-title\" >{title}</h1>;\n};\n\nexport default AppMainTitle;","import React from 'react';\n\nimport './app-info-to-do.scss';\n\nconst AppInfoToDo = ({countToDo, countDone}) => {\n    return (\n        <div className=\"app-info-to-do\">\n            <span>{countToDo} more to do, {countDone} done</span>\n        </div>\n    );\n};\n\nexport default AppInfoToDo;","import React from 'react';\n\nimport AppMainTitle from '../app-main-title/app-main-title';\nimport AppInfoToDo from '../app-info-to-do/app-info-to-do';\n\nimport './app-header.scss';\n\nconst AppHeader = ({todoData}) => {\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n        <div className=\"app-header\">\n            <AppMainTitle title=\"Todo List\" />\n            <AppInfoToDo countToDo={todoCount} countDone={doneCount} />\n        </div>\n    );\n};\n\nexport default AppHeader;","import React, { Component } from 'react';\n\nimport './app-search.scss';\n\nexport default class AppSearch extends Component {\n    state = {\n        term: ''\n    };\n\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({ term });\n        this.props.onSearchChange(term);\n    };\n\n    render() {\n        return (\n            <input type=\"text\"\n                   placeholder=\"Search\"\n                   className=\"app-search\"\n                   value={this.state.term}\n                   onChange={this.onSearchChange}\n            />\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport './app-filter.scss';\n\nexport default class AppFilter extends Component {\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ];\n\n    render() {\n        const {filter, onFilterChange} = this.props;\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-primary' : 'btn-outline-secondary';\n\n            return (\n                <button type=\"button\"\n                        className={`btn app-filter-btn ${clazz}`}\n                        key={name}\n                        onClick={() => onFilterChange(name)}>\n                    {label}\n                </button>\n            )\n        });\n\n        return (\n            <div className=\"app-filter\">\n                {buttons}\n            </div>\n        );\n    }\n};\n","import React from 'react';\n\nimport AppSearch from '../app-search/app-search';\nimport AppFilter from '../app-filter/app-filter';\n\nimport './app-main-search.scss';\n\nconst AppMainSearch = ({onSearchChange, filter, onFilterChange}) => {\n    return (\n        <div className=\"app-main-search\">\n            <AppSearch onSearchChange={onSearchChange} />\n            <AppFilter filter={filter}\n                       onFilterChange={onFilterChange} />\n        </div>\n    );\n};\n\nexport default AppMainSearch;","import React from 'react';\n\nimport './todo-list-item.scss';\n\nconst TodoListItem = ({important, label, onDoneItem, done}) => {\n    const style = {\n        color: important ? 'white' : 'black'\n    };\n\n    let itemClassNames = 'todo-list-item';\n\n    if(done) {\n        itemClassNames += ' done';\n    }\n\n    return <span style={style}\n                   className={itemClassNames}\n                   onClick={onDoneItem}\n        >{label}</span>;\n}\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './app-remove-item.scss';\n\nconst AppRemoveItem = ({onRemoveItem}) => {\n    return (\n        <button type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={onRemoveItem}>\n            <i className=\"far fa-calendar-times\"></i>\n        </button>\n    );\n};\n\nexport default AppRemoveItem;","import React from 'react';\n\nimport './app-important-item.scss';\n\nconst AppImportantItem = ({onImportantItem}) => {\n    return (\n        <button type=\"button\"\n                className=\"btn btn-success\"\n                onClick={onImportantItem}>\n            <i className=\"far fa-star\"></i>\n        </button>\n    );\n};\n\nexport default AppImportantItem;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/todo-list-item';\nimport AppRemoveItem from '../app-remove-item/app-remove-item';\nimport AppImportantItem from '../app-important-item/app-important-item';\n\nimport './app-list.scss';\n\nconst AppList = ({ todoData, onRemoveItem, onDoneItem, onImportantItem }) => {\n\n    const listItem = todoData.map(item => {\n\n        const {id, important, ...itemProps} = item;\n\n        return (\n            <li key={id} className={`list-group-item ${important  ? 'active' : ''}`}>\n                <TodoListItem important={important}\n                              onDoneItem={() => onDoneItem(id)}\n                              {...itemProps} />\n                <div className=\"list-group-item-actions\">\n                    <AppRemoveItem onRemoveItem={() => onRemoveItem(id)} />\n                    <AppImportantItem onImportantItem={() => onImportantItem(id)} />\n                </div>\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group app-list\">\n            { listItem }\n        </ul>\n    );\n};\n\nexport default AppList;","import React, { Component } from 'react';\n\nimport './app-add-form.scss';\n\nexport default class AppAddForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.onAddItem(this.state.label);\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        const {btnName} = this.props;\n\n        return (\n            <form className=\"app-add-form\"\n                  onSubmit={this.onSubmit} >\n                <input type=\"text\"\n                       value={this.state.label}\n                       className=\"form-control\"\n                       onChange={this.onLabelChange}\n                       placeholder=\"Your task\" />\n                <button className=\"btn btn-outline-secondary\" >\n                    {btnName}\n                </button>\n            </form>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header/app-header';\nimport AppMainSearch from '../app-main-search/app-main-search';\nimport AppList from '../app-list/app-list';\nimport AppAddForm from '../app-add-form/app-add-form';\n\nimport './app.scss';\n\nexport default class App extends Component {\n\n    maxId = 0;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink a tea'),\n            this.createTodoItem('Install template for WordPress'),\n            this.createTodoItem('Change blocks in template')\n        ],\n        term: '',\n        filter: 'all'\n    }\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: ++this.maxId\n        }\n    }\n\n    changeStateToDoData(id, propName) {\n        this.setState(( { todoData } ) => {\n            // Update odject\n            const idx = todoData.findIndex((elem) => elem.id === id);\n            const oldItem = todoData[idx];\n\n            const newItem = {\n                ...oldItem,\n                [propName]: !oldItem[propName]\n            };\n\n            // Construct new array\n            const newArray = [\n                ...todoData.slice(0, idx),\n                newItem,\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {\n                todoData: newArray\n            };\n        })\n    }\n\n    removeItem = (id) => {\n        this.setState(({ todoData }) => {\n            const idx = todoData.findIndex((elem) => elem.id === id);\n\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {\n                todoData: newArray\n            }\n        })\n    }\n\n    addItem = (text) => {\n        this.state.todoData.map((obj) => {\n            if(obj.id > this.maxId) this.maxId = obj.id;\n        })\n\n        const newItem = this.createTodoItem(text)\n\n        this.setState(({ todoData }) => {\n            const newArr = [\n                ...todoData,\n                newItem\n            ];\n\n            return {\n                todoData: newArr\n            }\n        })\n    }\n\n    doneItem = (id) => {\n        this.changeStateToDoData(id, 'done');\n    }\n\n    importantItem = (id) => {\n        this.changeStateToDoData(id, 'important');\n    }\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    }\n\n    search(items, term) {\n        if(term.length === 0) return items;\n\n        return items.filter((item) => {\n            return item.label\n                .toLowerCase()\n                .indexOf(term.toLowerCase()) > -1;\n        });\n    }\n\n    filter(items, filter) {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n    }\n\n    render() {\n        const { todoData, term, filter } = this.state;\n\n        const visibleItem = this.filter(\n            this.search(todoData, term),\n            filter\n        );\n\n        return (\n            <div>\n                <div className=\"main-wrapper\">\n                    <AppHeader todoData={todoData} />\n                    <AppMainSearch onSearchChange={this.onSearchChange}\n                                   onFilterChange={this.onFilterChange}\n                                   filter={filter}\n                    />\n                    <AppList\n                        todoData={visibleItem}\n                        onRemoveItem={this.removeItem}\n                        onDoneItem={this.doneItem}\n                        onImportantItem={this.importantItem}\n                    />\n                    <AppAddForm btnName={'Add To Do'} onAddItem={this.addItem}/>\n                </div>\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from \"./components/app/app\";\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}